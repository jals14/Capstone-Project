# -*- coding: utf-8 -*-
"""Capstone

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VJpL4k6WjUD37hO1Di27jzSzYAn5f8Af
"""

import tensorflow as tf
from tensorflow.keras import layers, models
import matplotlib.pyplot as plt

# Load dataset MNIST (angka tulisan tangan)
(x_train, y_train), (x_test, y_test) = tf.keras.datasets.mnist.load_data()

# Normalisasi dan reshape
x_train = x_train / 255.0
x_test = x_test / 255.0

x_train = x_train.reshape(-1, 28, 28, 1)
x_test = x_test.reshape(-1, 28, 28, 1)

print("Data shape:", x_train.shape)

model = models.Sequential([
    layers.Conv2D(32, (3,3), activation='relu', input_shape=(28, 28, 1)),
    layers.MaxPooling2D((2,2)),
    layers.Conv2D(64, (3,3), activation='relu'),
    layers.MaxPooling2D((2,2)),
    layers.Flatten(),
    layers.Dense(64, activation='relu'),
    layers.Dense(10, activation='softmax')  # 10 kelas (angka 0-9)
])

model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

model.fit(x_train, y_train, epochs=5, validation_split=0.1)

test_loss, test_acc = model.evaluate(x_test, y_test)
print("\nAkurasi di data uji: {:.2f}%".format(test_acc * 100))

import numpy as np

# Contoh prediksi angka pertama di data uji
plt.imshow(x_test[0].reshape(28, 28), cmap='gray')
plt.title("Label Sebenarnya: {}".format(y_test[0]))
plt.show()

pred = model.predict(np.expand_dims(x_test[0], axis=0))
print("Prediksi model:", tf.argmax(pred[0]).numpy())

model.save('model.keras')